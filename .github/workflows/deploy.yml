name: Deploy to Linode (Maven + .env + DB)

on:
  push:
    branches:
      - main  # Trigger deploys when you push to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Setup SSH to connect to Linode
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -H ${{ secrets.LINODE_HOST }} >> ~/.ssh/known_hosts

      # Step 3: Deploy to Linode via SSH
      - name: Deploy to Linode
        run: |
          set -x  # enable debug logging

          ssh -T -i ~/.ssh/id_ed25519 ${{ secrets.LINODE_USER }}@${{ secrets.LINODE_HOST }} << 'EOF'
          set -e  # stop on any error

          # Go to main project folder (create if missing)
          cd ~/main || (mkdir -p ~/main && cd ~/main)

          # Clone or update repo
          if [ ! -d .git ]; then
            git clone https://github.com/${{ github.repository }}.git .
          else
            git fetch origin main
            git reset --hard origin/main
          fi

          # Preserve existing .env (don't overwrite)
          [ -f .env ] && echo ".env preserved"

          # Ensure Java & Maven are installed
          sudo apt update -y
          sudo apt install -y openjdk-22-jdk maven

          # Build your JAR file
          mvn clean package -DskipTests

          # Create logs directory
          mkdir -p logs

          # Stop any running instance of the bot
          pkill -f 'java -jar' || true

          # Start new instance (backgrounded)
          nohup java -jar target/*-jar-with-dependencies.jar > logs/bot.log 2>&1 &

          echo " Deployment complete at $(date)"
          EOF
